{"ast":null,"code":"import Sortable from 'sortablejs';\nimport Rails from \"@rails/ujs\";\n\nvar initKanbanSortable = function initKanbanSortable(ulElements) {\n  var saveKanbanBinded = saveKanban.bind(null, ulElements);\n  ulElements.forEach(function (ul) {\n    new Sortable(ul, {\n      group: 'kanban',\n      // set both lists to same group\n      animation: 300,\n      onEnd: saveKanbanBinded\n    });\n  });\n};\n\nvar kanbanForm = document.querySelector(\".kanban-form-input\");\n\nvar saveKanban = function saveKanban(ulElements) {\n  // Let's build an Object kanbanIds containing all the kanban Ids\n  // E.g. :\n  // {\n  //   \"columns\": [\n  //     { \"id\": 1, \"itemIds\": [3, 2] },\n  //     { \"id\": 2, \"itemIds\": [4, 5] },\n  //     { \"id\": 3, \"itemIds\": [6, 1] }\n  //   ]\n  // }\n  var kanbanIds = {\n    \"columns\": []\n  };\n  ulElements.forEach(function (ul) {\n    var itemIds = [];\n    ul.querySelectorAll(\".kanban-col-item\").forEach(function (item) {\n      return itemIds.push(Number.parseInt(item.dataset.itemId, 10));\n    });\n    kanbanIds.columns.push({\n      'id': Number.parseInt(ul.dataset.colId, 10),\n      'itemIds': itemIds\n    });\n  }); // kanbanForm.value = JSON.stringify(kanbanIds);\n\n  var kanbanId = document.querySelector(\".kanban\").dataset.id;\n  var formData = new FormData();\n  formData.append('kanban[kanbanIds]', JSON.stringify(kanbanIds));\n  Rails.ajax({\n    url: \"/kanbans/\".concat(kanbanId, \"/sort\"),\n    type: \"patch\",\n    data: formData\n  });\n};\n\nexport { initKanbanSortable };","map":{"version":3,"sources":["/home/roberto/dragndrop_kanban_app-master/app/javascript/plugins/initSortable.js"],"names":["Sortable","Rails","initKanbanSortable","ulElements","saveKanbanBinded","saveKanban","bind","forEach","ul","group","animation","onEnd","kanbanForm","document","querySelector","kanbanIds","itemIds","querySelectorAll","item","push","Number","parseInt","dataset","itemId","columns","colId","kanbanId","id","formData","FormData","append","JSON","stringify","ajax","url","type","data"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,UAAD,EAAgB;AACzC,MAAMC,gBAAgB,GAAGC,UAAU,CAACC,IAAX,CAAgB,IAAhB,EAAsBH,UAAtB,CAAzB;AACAA,EAAAA,UAAU,CAACI,OAAX,CAAmB,UAACC,EAAD,EAAQ;AACzB,QAAIR,QAAJ,CAAaQ,EAAb,EAAiB;AACbC,MAAAA,KAAK,EAAE,QADM;AACI;AACjBC,MAAAA,SAAS,EAAE,GAFE;AAGbC,MAAAA,KAAK,EAAEP;AAHM,KAAjB;AAKD,GAND;AAOD,CATD;;AAWA,IAAMQ,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CAAnB;;AACA,IAAMT,UAAU,GAAG,SAAbA,UAAa,CAACF,UAAD,EAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMY,SAAS,GAAG;AAAC,eAAW;AAAZ,GAAlB;AACAZ,EAAAA,UAAU,CAACI,OAAX,CAAmB,UAAAC,EAAE,EAAI;AACvB,QAAMQ,OAAO,GAAG,EAAhB;AACAR,IAAAA,EAAE,CAACS,gBAAH,CAAoB,kBAApB,EACGV,OADH,CACW,UAAAW,IAAI;AAAA,aAAIF,OAAO,CAACG,IAAR,CAAaC,MAAM,CAACC,QAAP,CAAgBH,IAAI,CAACI,OAAL,CAAaC,MAA7B,EAAoC,EAApC,CAAb,CAAJ;AAAA,KADf;AAEAR,IAAAA,SAAS,CAACS,OAAV,CAAkBL,IAAlB,CACE;AACE,YAAMC,MAAM,CAACC,QAAP,CAAgBb,EAAE,CAACc,OAAH,CAAWG,KAA3B,EAAiC,EAAjC,CADR;AAEE,iBAAWT;AAFb,KADF;AAMD,GAVD,EAXiC,CAsBjC;;AACA,MAAMU,QAAQ,GAAGb,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCQ,OAAlC,CAA0CK,EAA3D;AACA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,mBAAhB,EAAqCC,IAAI,CAACC,SAAL,CAAejB,SAAf,CAArC;AACAd,EAAAA,KAAK,CAACgC,IAAN,CAAW;AACPC,IAAAA,GAAG,qBAAcR,QAAd,UADI;AAEPS,IAAAA,IAAI,EAAE,OAFC;AAGPC,IAAAA,IAAI,EAAER;AAHC,GAAX;AAKD,CA/BD;;AAiCA,SAAS1B,kBAAT","sourcesContent":["import Sortable from 'sortablejs';\nimport Rails from \"@rails/ujs\";\n\nconst initKanbanSortable = (ulElements) => {\n  const saveKanbanBinded = saveKanban.bind(null, ulElements);\n  ulElements.forEach((ul) => {\n    new Sortable(ul, {\n        group: 'kanban', // set both lists to same group\n        animation: 300,\n        onEnd: saveKanbanBinded\n    });\n  });\n};\n\nconst kanbanForm = document.querySelector(\".kanban-form-input\");\nconst saveKanban = (ulElements) => {\n  // Let's build an Object kanbanIds containing all the kanban Ids\n  // E.g. :\n  // {\n  //   \"columns\": [\n  //     { \"id\": 1, \"itemIds\": [3, 2] },\n  //     { \"id\": 2, \"itemIds\": [4, 5] },\n  //     { \"id\": 3, \"itemIds\": [6, 1] }\n  //   ]\n  // }\n  const kanbanIds = {\"columns\": []};\n  ulElements.forEach(ul => {\n    const itemIds = [];\n    ul.querySelectorAll(\".kanban-col-item\")\n      .forEach(item => itemIds.push(Number.parseInt(item.dataset.itemId,10)));\n    kanbanIds.columns.push(\n      {\n        'id': Number.parseInt(ul.dataset.colId,10),\n        'itemIds': itemIds\n      }\n    );\n  });\n  // kanbanForm.value = JSON.stringify(kanbanIds);\n  const kanbanId = document.querySelector(\".kanban\").dataset.id;\n  const formData = new FormData();\n  formData.append('kanban[kanbanIds]', JSON.stringify(kanbanIds));\n  Rails.ajax({\n      url: `/kanbans/${kanbanId}/sort`,\n      type: \"patch\",\n      data: formData\n    })\n}\n\nexport { initKanbanSortable };\n"]},"metadata":{},"sourceType":"module"}